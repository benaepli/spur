type Value = int;

role Head {
    let db: map<string, Value> = {"hi": 0};
    let l: lock = create_lock();

    func write1(key: string, value: Value) {
        db[key] = value;
    }

    func write2(key: string)  {
        db[key] = db[key] + 1;
    }

    func WritePlusOne(key: string, value: int) -> bool {
        await lock(l) {
            await write1(key, value);
            await write2(key);
        }
        return true;
    }

    func Read(key: string) -> Value {
        return db[key];
    }

    func Empty() {
        return ();
    }
}

ClientInterface {
    func write(node: Head, key: string, value: Value) {
        await rpc_call(node, WritePlusOne(key, value));
    }

    func read(node: Head, key: string) -> Value {
        return await rpc_call(node, Read(key));
    }
}